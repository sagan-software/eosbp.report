// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var Js_dict = require("bs-platform/lib/js/js_dict.js");
var Js_option = require("bs-platform/lib/js/js_option.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var RequestPromise = require("request-promise");

function header(t, key) {
  return Js_primitive.undefined_to_opt(t.headers[key]);
}

var Options = /* module */[];

var TimedOut = Caml_exceptions.create("Request-ReactTemplate.TimedOut");

var UnknownError = Caml_exceptions.create("Request-ReactTemplate.UnknownError");

var $$Error = /* module */[];

function make(url, $staropt$star, $staropt$star$1, body, $staropt$star$2, headers, _) {
  var method__ = $staropt$star !== undefined ? $staropt$star : "GET";
  var json = $staropt$star$1 !== undefined ? $staropt$star$1 : false;
  var timeout = $staropt$star$2 !== undefined ? $staropt$star$2 : 0;
  return RequestPromise({
                url: url,
                method: method__,
                json: json,
                resolveWithFullResponse: true,
                body: body,
                simple: false,
                time: true,
                timeout: timeout,
                headers: Js_dict.fromArray(Js_option.getWithDefault(/* array */[], headers))
              }).catch((function (e) {
                var match = e.error.code;
                var tmp = match === "ETIMEDOUT" ? [
                    TimedOut,
                    url
                  ] : [
                    UnknownError,
                    e
                  ];
                return Promise.reject(tmp);
              }));
}

exports.header = header;
exports.Options = Options;
exports.TimedOut = TimedOut;
exports.UnknownError = UnknownError;
exports.$$Error = $$Error;
exports.make = make;
/* Js_dict Not a pure module */
